# Purpose of script: use the simulated linelist and add geographic parameters
#
# Author: Hugo Soubrier
#
# Date Created: 2024-12-22
#
## Load packages ---------------------------
pacman::p_load(
  rio, # import funcs
  sf, # work with spatial data
  here, # create relative paths
  janitor, # data cleaning
  lubridate, # date handling
  tidyverse # data science
)

conflicted::conflict_prefer("select", "dplyr")
conflicted::conflict_prefer("filter", "dplyr")

source("R/set_paths.R")

#  Tasks -----------------------------------------------------------------

# TODO assign adm2
# TODO assign adm3
# TODO assign adm4
# TODO assign coordinates
# TODO assign Health facilities

# Import data ------------------------------------------------------------

sim_ll <- readRDS(here::here("data", "clean", "simulated_measles_ll.rds"))

# admin levels come from the geobase
adm1 <- readRDS(here::here(set_paths()$sharepoint_path, "OutbreakTools - GeoBase/TCD/TCD__ALL__20231122__124H/sf/TCD_adm1.rds"))
adm2 <- readRDS(here::here(set_paths()$sharepoint_path, "OutbreakTools - GeoBase/TCD/TCD__ALL__20231122__124H/sf/TCD_adm2.rds"))
#adm3 <- readRDS(here::here(set_paths()$sharepoint_path, "OutbreakTools - GeoBase/TCD/TCD__ALL__20231122__124H/sf/TCD_adm3.rds"))
adm4 <- readRDS(here::here(set_paths()$sharepoint_path, "OutbreakTools - GeoBase/TCD/TCD__ALL__20231122__124H/sf/TCD_adm4.rds"))

# health facilities come from the GIS
hf <- sf::st_read(dsn = fs::path(set_paths()$sharepoint_path, 
"OutbreakTools - GeoBase", "TCD", "resources", "shp", "GeoMSF", "MasterData", "MasterData.gdb"), 
layer = "main_owner_hltfac_p_msf")|> select(pcode, name_fr, name_en, local_name, type_name, operated_by)

# prepare data -----------------------------------------------------------
mandoul_adm2 <- adm2 |> filter(adm1_name == "Mandoul")
#mandoul_adm3 <- adm3 |> filter(adm1_name == "Mandoul")
mandoul_adm4 <- adm4 |> filter(adm1_name == "Mandoul")

hf_mandoul <- hf[mandoul_adm2, ]

# Map --------------------------------------------------------------------
# a map of the admin levels of chad with pop density + health facilities

# the regions are different from Open street map layer
mapview::mapview( adm1, alpha.regions = 0, label = "adm1_name", lxd = 30, layer.name = "Health facilities")
mapview::mapview( mandoul_adm2, alpha.regions = 0, label = "adm2_name", lxd = 13, layer.name = "Admin 2")
mapview::mapview( mandoul_adm4, alpha.regions = 0, label = "adm4_name", lxd = 13, layer.name = "Admin 4") 
mapview::mapview(hf_mandoul, label = "name_fr", layer.name = "Health facilities")


  mapview::mapview(
    filter(adm3, adm1_name == "Mandoul"),
    color = "darkred",
    lxd = 13,
    alpha.regions = .4,
    layer.name = "Mandoul",
    label = "adm2_name") + mapview::mapview(
    filter(adm4, adm1_name == "Mandoul"),
    color = "darkred",
    lxd = 13,
    alpha.regions = .4,
    layer.name = "Mandoul",
    label = "adm2_name")
!


# !  Add Geographic Variables --------------------------------

# get date vector - have to go through this because date_onset in simulist is actually a datetime so can't remove duplicates with unique()
dates <- sim_ll |>
  mutate(date_onset = floor_date(date_onset, unit = "day")) |>
  distinct(date_onset) |>
  arrange(date_onset) |>
  pull(date_onset)

# this defines the oputbreak dates for each of the admin2
out_dates_goundi <- c(as.Date("2023-08-19"), as.Date("2023-10-09"))
out_dates_koumra <- c(as.Date("2023-08-13"), as.Date("2023-12-01"))
out_dates_bedaya <- c(as.Date("2023-07-01"), as.Date("2023-12-01"))
out_dates_bedjondo <- c(as.Date("2023-06-08"), as.Date("2023-12-01"))
out_dates_bouna <- c(as.Date("2023-01-07"), as.Date("2023-11-28"))
out_dates_bekourou <- c(as.Date("2023-06-13"), as.Date("2023-10-28"))
out_dates_moissala <- c(as.Date("2022-08-01"), as.Date("2023-12-01"))

# check if a date is between dates of admin2
is_between <- function(date_check, out_date) {
  between(date_check, min(out_date), max(out_date))
}

# Here we create a df here we define the probability of being assigned a admin2 based on the day of the outbreak

date_prob <- data.frame(
  date = dates,
  index = rank(dates)
) |>
  as_tibble() |>
  mutate(
    check_moissala = is_between(date, out_dates_moissala),
    check_bekourou = is_between(date, out_dates_bekourou),
    check_bouna = is_between(date, out_dates_bouna),
    check_bedjondo = is_between(date, out_dates_bedjondo),
    check_bedaya = is_between(date, out_dates_bedaya),
    check_koumra = is_between(date, out_dates_koumra),
    check_goundi = is_between(date, out_dates_goundi)
  ) |>
  pivot_longer(contains("check"),
    names_to = "sub_prefecture",
    values_to = "check",
    names_prefix = "check_"
  ) |>
  mutate(
    .by = index,
    n_admin_out = sum(check),
    probability = case_when(
      !check ~ 0,
      n_admin_out == 1 & check ~ 1,
      n_admin_out > 1 & sub_prefecture == "moissala" & check ~ .6,
      n_admin_out > 1 & sub_prefecture != "moisala" & check ~ .4 / (n_admin_out - 1)
    )
  )


# assign the admin2 based on probability
sim_ll <- sim_ll |>
  mutate(date_onset = floor_date(date_onset, unit = "day")) |>
  left_join(date_prob,
    by = join_by(date_onset == date),
    relationship = "many-to-many"
  ) |>
  summarise(
    .by = c(id, case_name, case_type, sex, age, age_unit, age_group, date_onset, hospitalisation, date_admission, outcome, date_outcome, date_first_contact, date_last_contact, ct_value),
    region = "Mandoul",
    sub_prefecture = sample(sub_prefecture, probability, size = 1, replace = TRUE)
  )

ggplot(data = sim_ll) +
  geom_histogram(
    aes(
      x = date_onset,
      fill = sub_prefecture
    ),
    binwidth = 7
  ) +
  scale_x_date(date_breaks = "1 month") +
  facet_wrap(~sub_prefecture) +
  gghighlight::gghighlight() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))


## Add hospital data ----------------------------------------

# Add hospitals

sim_ll <- sim_ll |>
  mutate(site = case_when(
    sub_prefecture == "Moissala" ~ "MoÃ¯ssala Hospital",
    sub_prefecture == "Danamadji" ~ "Danamadji Hospital",
    sub_prefecture == "Bedaya" ~ "Bedaya Hospital",
    sub_prefecture == "Bekourou" ~ "Bekourou Hospital",
    sub_prefecture == "Bouna" ~ "Bouna Hospital",
    sub_prefecture == "Koumogo" ~ "Koumogo Hospital",
  )) |>
  relocate(site, .after = id)

ggplot(data = sim_ll) +
  geom_histogram(aes(x = date_onset)) +
  facet_wrap(~site)
